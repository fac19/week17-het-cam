{"ast":null,"code":"'use strict';\n\nvar forEach = require('lodash/forEach');\n\nvar get = require('lodash/get');\n\nvar assign = require('lodash/assign');\n\nvar isPlainObject = require('lodash/isPlainObject'); // This will become require('xhr') in the browser.\n\n\nvar request = require('request');\n\nvar AirtableError = require('./airtable_error');\n\nvar Table = require('./table');\n\nvar HttpHeaders = require('./http_headers');\n\nvar runAction = require('./run_action');\n\nvar packageVersion = require('./package_version');\n\nvar exponentialBackoffWithJitter = require('./exponential_backoff_with_jitter');\n\nvar Promise = require('./promise');\n\nvar userAgent = 'Airtable.js/' + packageVersion;\n\nfunction Base(airtable, baseId) {\n  this._airtable = airtable;\n  this._id = baseId;\n}\n\nBase.prototype.table = function (tableName) {\n  return new Table(this, null, tableName);\n};\n\nBase.prototype.makeRequest = function (options) {\n  var that = this;\n  options = options || {};\n  var method = get(options, 'method', 'GET').toUpperCase();\n  var requestOptions = {\n    method: method,\n    url: this._airtable._endpointUrl + '/v' + this._airtable._apiVersionMajor + '/' + this._id + get(options, 'path', '/'),\n    qs: get(options, 'qs', {}),\n    headers: this._getRequestHeaders(get(options, 'headers', {})),\n    json: true,\n    timeout: this._airtable.requestTimeout\n  };\n\n  if ('body' in options && _canRequestMethodIncludeBody(method)) {\n    requestOptions.body = options.body;\n  }\n\n  return new Promise(function (resolve, reject) {\n    request(requestOptions, function (err, response, body) {\n      if (!err && response.statusCode === 429 && !that._airtable._noRetryIfRateLimited) {\n        var numAttempts = get(options, '_numAttempts', 0);\n        var backoffDelayMs = exponentialBackoffWithJitter(numAttempts);\n        setTimeout(function () {\n          var newOptions = assign({}, options, {\n            _numAttempts: numAttempts + 1\n          });\n          that.makeRequest(newOptions).then(resolve).catch(reject);\n        }, backoffDelayMs);\n        return;\n      }\n\n      if (err) {\n        err = new AirtableError('CONNECTION_ERROR', err.message, null);\n      } else {\n        err = that._checkStatusForError(response.statusCode, body) || _getErrorForNonObjectBody(response.statusCode, body);\n      }\n\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve({\n        statusCode: response.statusCode,\n        headers: response.headers,\n        body: body\n      });\n    });\n  });\n}; // This method is deprecated.\n\n\nBase.prototype.runAction = function (method, path, queryParams, bodyData, callback) {\n  runAction(this, method, path, queryParams, bodyData, callback, 0);\n};\n\nBase.prototype._getRequestHeaders = function (headers) {\n  var result = new HttpHeaders();\n  result.set('Authorization', 'Bearer ' + this._airtable._apiKey);\n  result.set('User-Agent', userAgent);\n  forEach(headers, function (headerValue, headerKey) {\n    result.set(headerKey, headerValue);\n  });\n  return result.toJSON();\n};\n\nBase.prototype._checkStatusForError = function (statusCode, body) {\n  if (statusCode === 401) {\n    return new AirtableError('AUTHENTICATION_REQUIRED', 'You should provide valid api key to perform this operation', statusCode);\n  } else if (statusCode === 403) {\n    return new AirtableError('NOT_AUTHORIZED', 'You are not authorized to perform this operation', statusCode);\n  } else if (statusCode === 404) {\n    return function () {\n      var message = body && body.error && body.error.message ? body.error.message : 'Could not find what you are looking for';\n      return new AirtableError('NOT_FOUND', message, statusCode);\n    }();\n  } else if (statusCode === 413) {\n    return new AirtableError('REQUEST_TOO_LARGE', 'Request body is too large', statusCode);\n  } else if (statusCode === 422) {\n    return function () {\n      var type = body && body.error && body.error.type ? body.error.type : 'UNPROCESSABLE_ENTITY';\n      var message = body && body.error && body.error.message ? body.error.message : 'The operation cannot be processed';\n      return new AirtableError(type, message, statusCode);\n    }();\n  } else if (statusCode === 429) {\n    return new AirtableError('TOO_MANY_REQUESTS', 'You have made too many requests in a short period of time. Please retry your request later', statusCode);\n  } else if (statusCode === 500) {\n    return new AirtableError('SERVER_ERROR', 'Try again. If the problem persists, contact support.', statusCode);\n  } else if (statusCode === 503) {\n    return new AirtableError('SERVICE_UNAVAILABLE', 'The service is temporarily unavailable. Please retry shortly.', statusCode);\n  } else if (statusCode >= 400) {\n    return function () {\n      var type = body && body.error && body.error.type ? body.error.type : 'UNEXPECTED_ERROR';\n      var message = body && body.error && body.error.message ? body.error.message : 'An unexpected error occurred';\n      return new AirtableError(type, message, statusCode);\n    }();\n  } else {\n    return null;\n  }\n};\n\nBase.prototype.doCall = function (tableName) {\n  return this.table(tableName);\n};\n\nBase.prototype.getId = function () {\n  return this._id;\n};\n\nBase.createFunctor = function (airtable, baseId) {\n  var base = new Base(airtable, baseId);\n\n  var baseFn = function () {\n    return base.doCall.apply(base, arguments);\n  };\n\n  forEach(['table', 'makeRequest', 'runAction', 'getId'], function (baseMethod) {\n    baseFn[baseMethod] = base[baseMethod].bind(base);\n  });\n  baseFn._base = base;\n  baseFn.tables = base.tables;\n  return baseFn;\n};\n\nfunction _canRequestMethodIncludeBody(method) {\n  return method !== 'GET' && method !== 'DELETE';\n}\n\nfunction _getErrorForNonObjectBody(statusCode, body) {\n  if (isPlainObject(body)) {\n    return null;\n  } else {\n    return new AirtableError('UNEXPECTED_ERROR', 'The response from Airtable was invalid JSON. Please try again soon.', statusCode);\n  }\n}\n\nmodule.exports = Base;","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/node_modules/airtable/lib/base.js"],"names":["forEach","require","get","assign","isPlainObject","request","AirtableError","Table","HttpHeaders","runAction","packageVersion","exponentialBackoffWithJitter","Promise","userAgent","Base","airtable","baseId","_airtable","_id","prototype","table","tableName","makeRequest","options","that","method","toUpperCase","requestOptions","url","_endpointUrl","_apiVersionMajor","qs","headers","_getRequestHeaders","json","timeout","requestTimeout","_canRequestMethodIncludeBody","body","resolve","reject","err","response","statusCode","_noRetryIfRateLimited","numAttempts","backoffDelayMs","setTimeout","newOptions","_numAttempts","then","catch","message","_checkStatusForError","_getErrorForNonObjectBody","path","queryParams","bodyData","callback","result","set","_apiKey","headerValue","headerKey","toJSON","error","type","doCall","getId","createFunctor","base","baseFn","apply","arguments","baseMethod","bind","_base","tables","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar forEach = require('lodash/forEach');\nvar get = require('lodash/get');\nvar assign = require('lodash/assign');\nvar isPlainObject = require('lodash/isPlainObject');\n\n// This will become require('xhr') in the browser.\nvar request = require('request');\n\nvar AirtableError = require('./airtable_error');\nvar Table = require('./table');\nvar HttpHeaders = require('./http_headers');\nvar runAction = require('./run_action');\nvar packageVersion = require('./package_version');\nvar exponentialBackoffWithJitter = require('./exponential_backoff_with_jitter');\nvar Promise = require('./promise');\n\nvar userAgent = 'Airtable.js/' + packageVersion;\n\nfunction Base(airtable, baseId) {\n    this._airtable = airtable;\n    this._id = baseId;\n}\n\nBase.prototype.table = function(tableName) {\n    return new Table(this, null, tableName);\n};\n\nBase.prototype.makeRequest = function(options) {\n    var that = this;\n\n    options = options || {};\n\n    var method = get(options, 'method', 'GET').toUpperCase();\n\n    var requestOptions = {\n        method: method,\n        url:\n            this._airtable._endpointUrl +\n            '/v' +\n            this._airtable._apiVersionMajor +\n            '/' +\n            this._id +\n            get(options, 'path', '/'),\n        qs: get(options, 'qs', {}),\n        headers: this._getRequestHeaders(get(options, 'headers', {})),\n        json: true,\n        timeout: this._airtable.requestTimeout,\n    };\n    if ('body' in options && _canRequestMethodIncludeBody(method)) {\n        requestOptions.body = options.body;\n    }\n\n    return new Promise(function(resolve, reject) {\n        request(requestOptions, function(err, response, body) {\n            if (!err && response.statusCode === 429 && !that._airtable._noRetryIfRateLimited) {\n                var numAttempts = get(options, '_numAttempts', 0);\n                var backoffDelayMs = exponentialBackoffWithJitter(numAttempts);\n                setTimeout(function() {\n                    var newOptions = assign({}, options, {\n                        _numAttempts: numAttempts + 1,\n                    });\n                    that.makeRequest(newOptions)\n                        .then(resolve)\n                        .catch(reject);\n                }, backoffDelayMs);\n                return;\n            }\n\n            if (err) {\n                err = new AirtableError('CONNECTION_ERROR', err.message, null);\n            } else {\n                err =\n                    that._checkStatusForError(response.statusCode, body) ||\n                    _getErrorForNonObjectBody(response.statusCode, body);\n            }\n\n            if (err) {\n                reject(err);\n                return;\n            }\n\n            resolve({\n                statusCode: response.statusCode,\n                headers: response.headers,\n                body: body,\n            });\n        });\n    });\n};\n\n// This method is deprecated.\nBase.prototype.runAction = function(method, path, queryParams, bodyData, callback) {\n    runAction(this, method, path, queryParams, bodyData, callback, 0);\n};\n\nBase.prototype._getRequestHeaders = function(headers) {\n    var result = new HttpHeaders();\n\n    result.set('Authorization', 'Bearer ' + this._airtable._apiKey);\n    result.set('User-Agent', userAgent);\n    forEach(headers, function(headerValue, headerKey) {\n        result.set(headerKey, headerValue);\n    });\n\n    return result.toJSON();\n};\n\nBase.prototype._checkStatusForError = function(statusCode, body) {\n    if (statusCode === 401) {\n        return new AirtableError(\n            'AUTHENTICATION_REQUIRED',\n            'You should provide valid api key to perform this operation',\n            statusCode\n        );\n    } else if (statusCode === 403) {\n        return new AirtableError(\n            'NOT_AUTHORIZED',\n            'You are not authorized to perform this operation',\n            statusCode\n        );\n    } else if (statusCode === 404) {\n        return (function() {\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'Could not find what you are looking for';\n            return new AirtableError('NOT_FOUND', message, statusCode);\n        })();\n    } else if (statusCode === 413) {\n        return new AirtableError('REQUEST_TOO_LARGE', 'Request body is too large', statusCode);\n    } else if (statusCode === 422) {\n        return (function() {\n            var type =\n                body && body.error && body.error.type ? body.error.type : 'UNPROCESSABLE_ENTITY';\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'The operation cannot be processed';\n            return new AirtableError(type, message, statusCode);\n        })();\n    } else if (statusCode === 429) {\n        return new AirtableError(\n            'TOO_MANY_REQUESTS',\n            'You have made too many requests in a short period of time. Please retry your request later',\n            statusCode\n        );\n    } else if (statusCode === 500) {\n        return new AirtableError(\n            'SERVER_ERROR',\n            'Try again. If the problem persists, contact support.',\n            statusCode\n        );\n    } else if (statusCode === 503) {\n        return new AirtableError(\n            'SERVICE_UNAVAILABLE',\n            'The service is temporarily unavailable. Please retry shortly.',\n            statusCode\n        );\n    } else if (statusCode >= 400) {\n        return (function() {\n            var type = body && body.error && body.error.type ? body.error.type : 'UNEXPECTED_ERROR';\n            var message =\n                body && body.error && body.error.message\n                    ? body.error.message\n                    : 'An unexpected error occurred';\n            return new AirtableError(type, message, statusCode);\n        })();\n    } else {\n        return null;\n    }\n};\n\nBase.prototype.doCall = function(tableName) {\n    return this.table(tableName);\n};\n\nBase.prototype.getId = function() {\n    return this._id;\n};\n\nBase.createFunctor = function(airtable, baseId) {\n    var base = new Base(airtable, baseId);\n    var baseFn = function() {\n        return base.doCall.apply(base, arguments);\n    };\n    forEach(['table', 'makeRequest', 'runAction', 'getId'], function(baseMethod) {\n        baseFn[baseMethod] = base[baseMethod].bind(base);\n    });\n    baseFn._base = base;\n    baseFn.tables = base.tables;\n    return baseFn;\n};\n\nfunction _canRequestMethodIncludeBody(method) {\n    return method !== 'GET' && method !== 'DELETE';\n}\n\nfunction _getErrorForNonObjectBody(statusCode, body) {\n    if (isPlainObject(body)) {\n        return null;\n    } else {\n        return new AirtableError(\n            'UNEXPECTED_ERROR',\n            'The response from Airtable was invalid JSON. Please try again soon.',\n            statusCode\n        );\n    }\n}\n\nmodule.exports = Base;\n"]},"metadata":{},"sourceType":"script"}