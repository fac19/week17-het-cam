{"ast":null,"code":"var _jsxFileName = \"/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/pages/signUpPage/SignUp.js\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Heading from \"../../components/global/heading/Heading\";\nimport { DropdownCountries, DropdownGender } from \"../../components/global/forms/dropdown/Dropdown\";\nimport DateInput from \"../../components/global/forms/dateInput/DateInput\";\nimport { TextButton } from \"../../components/global/buttons/Buttons\";\nimport { FormContainer, FormInputWrapper } from \"./SignUp.style\";\nimport { AppContext } from \"../../utils/AppContext\"; // import fetchStudentRecords from \"../../utils/fetch-data\";\n\nconst SignUp = () => {\n  const {\n    loginInfo,\n    setLoginInfo\n  } = useContext(AppContext);\n  const {\n    isUserInfoComplete,\n    setIsUserInfoComplete\n  } = useContext(AppContext);\n  const history = useHistory();\n  const token = JSON.parse(localStorage.getItem(\"token\")); // const name = \"\";\n  // const email = \"\";\n\n  const name = token ? token.full_name : \"\";\n  const email = token ? token.email : \"\";\n  const [form, setForm] = React.useState({\n    Name: name,\n    Email: email,\n    dob: \"\",\n    gender: \"\",\n    country: \"\"\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  console.log(form);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"../../../.netlify/functions/post-student/post-student.js\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    });\n    const final = await response.json();\n    console.log(final);\n  }; // Retreive data from airtable, then check if user is already registered with all neccessary information\n\n\n  React.useEffect(() => {\n    // get user email from state\n    let userEmail = loginInfo.email;\n    console.log(\"in useEffect userEmail is: \", userEmail); // pass on email as a param to the database query\n    // let userDataAirtable = fetchStudentRecords(userEmail);\n\n    console.log(\"userdata is: \", isUserInfoComplete); // fetch(`../../../.netlify/functions/fetch-student/fetch-student.js/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"content-type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({ email: userEmail }),\n    // }).then((data) => console.log(\"we got back from the fetch: \", data));\n\n    fetch(`../../../.netlify/functions/fetch-student/fetch-student.js?`).then(data => console.log(\"we got back from the fetch: \", data)); //   fetchStudentRecords(userEmail, setIsUserInfoComplete);\n  }, [loginInfo]);\n  React.useEffect(() => {\n    console.log(\"isUserInfoComplete :\", isUserInfoComplete);\n\n    if (isUserInfoComplete) {\n      return history.push(\"/my-missions\");\n    }\n  }, [isUserInfoComplete]);\n  React.useEffect(() => {\n    const token = JSON.parse(localStorage.getItem(\"token\")); // console.log(token.email, token.full_name);\n\n    if (token) {\n      setLoginInfo({\n        email: token.email,\n        name: token.full_name\n      });\n    }\n  }, [setLoginInfo]);\n  console.log(loginInfo);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Before you begin...\"), /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateInput, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownCountries, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownGender, {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TextButton, {\n    type: \"submit\",\n    text: \"Get started!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }))); // query the airtable to see if we have user's details in our database\n  // if we do not\n  // render the signup p2 form to collect the data\n  // send and save the data on the airtable\n  // if we do have the details\n  // redirect to the mission page\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/pages/signUpPage/SignUp.js"],"names":["React","useContext","useHistory","Heading","DropdownCountries","DropdownGender","DateInput","TextButton","FormContainer","FormInputWrapper","AppContext","SignUp","loginInfo","setLoginInfo","isUserInfoComplete","setIsUserInfoComplete","history","token","JSON","parse","localStorage","getItem","name","full_name","email","form","setForm","useState","Name","Email","dob","gender","country","handleChange","event","value","target","console","log","handleSubmit","preventDefault","response","fetch","method","headers","body","stringify","final","json","useEffect","userEmail","then","data","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,SACEC,iBADF,EAEEC,cAFF,QAGO,iDAHP;AAIA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SAASC,UAAT,QAA2B,wBAA3B,C,CACA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BZ,UAAU,CAACS,UAAD,CAA9C;AACA,QAAM;AAAEI,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAgDd,UAAU,CAACS,UAAD,CAAhE;AAEA,QAAMM,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd,CALmB,CAMnB;AACA;;AACA,QAAMC,IAAI,GAAGL,KAAK,GAAGA,KAAK,CAACM,SAAT,GAAqB,EAAvC;AACA,QAAMC,KAAK,GAAGP,KAAK,GAAGA,KAAK,CAACO,KAAT,GAAiB,EAApC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1B,KAAK,CAAC2B,QAAN,CAAe;AACrCC,IAAAA,IAAI,EAAEN,IAD+B;AAErCO,IAAAA,KAAK,EAAEL,KAF8B;AAGrCM,IAAAA,GAAG,EAAE,EAHgC;AAIrCC,IAAAA,MAAM,EAAE,EAJ6B;AAKrCC,IAAAA,OAAO,EAAE;AAL4B,GAAf,CAAxB;;AAQA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEZ,MAAAA,IAAF;AAAQa,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAV,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACH,IAAD,GAAQa;AAAnB,KAAD,CAAP;AACD,GAHD;;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;;AAEA,QAAMc,YAAY,GAAG,MAAOL,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACM,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAD0B,EAE1B;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAE3B,IAAI,CAAC4B,SAAL,CAAerB,IAAf;AALR,KAF0B,CAA5B;AAUA,UAAMsB,KAAK,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAApB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,GAfD,CA1BmB,CA2CnB;;;AACA/C,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIC,SAAS,GAAGtC,SAAS,CAACY,KAA1B;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CY,SAA3C,EAHoB,CAIpB;AACA;;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BxB,kBAA7B,EANoB,CAQpB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4B,IAAAA,KAAK,CACF,6DADE,CAAL,CAEES,IAFF,CAEQC,IAAD,IAAUf,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4Cc,IAA5C,CAFjB,EAfoB,CAmBpB;AACD,GApBD,EAoBG,CAACxC,SAAD,CApBH;AAsBAZ,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AACpBZ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCxB,kBAApC;;AACA,QAAIA,kBAAJ,EAAwB;AACtB,aAAOE,OAAO,CAACqC,IAAR,CAAa,cAAb,CAAP;AACD;AACF,GALD,EAKG,CAACvC,kBAAD,CALH;AAOAd,EAAAA,KAAK,CAACiD,SAAN,CAAgB,MAAM;AACpB,UAAMhC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd,CADoB,CAEpB;;AAEA,QAAIJ,KAAJ,EAAW;AACTJ,MAAAA,YAAY,CAAC;AACXW,QAAAA,KAAK,EAAEP,KAAK,CAACO,KADF;AAEXF,QAAAA,IAAI,EAAEL,KAAK,CAACM;AAFD,OAAD,CAAZ;AAID;AACF,GAVD,EAUG,CAACV,YAAD,CAVH;AAYAwB,EAAAA,OAAO,CAACC,GAAR,CAAY1B,SAAZ;AAEA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAE2B,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEA,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEA,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAUE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,QAAlB;AAA4B,IAAA,IAAI,EAAE,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CADF,CAvFmB,CAyGnB;AAEA;AACA;AACA;AAEA;AACA;AACD,CAjHD;;AAmHA,eAAetB,MAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Heading from \"../../components/global/heading/Heading\";\nimport {\n  DropdownCountries,\n  DropdownGender,\n} from \"../../components/global/forms/dropdown/Dropdown\";\nimport DateInput from \"../../components/global/forms/dateInput/DateInput\";\nimport { TextButton } from \"../../components/global/buttons/Buttons\";\nimport { FormContainer, FormInputWrapper } from \"./SignUp.style\";\nimport { AppContext } from \"../../utils/AppContext\";\n// import fetchStudentRecords from \"../../utils/fetch-data\";\n\nconst SignUp = () => {\n  const { loginInfo, setLoginInfo } = useContext(AppContext);\n  const { isUserInfoComplete, setIsUserInfoComplete } = useContext(AppContext);\n\n  const history = useHistory();\n  const token = JSON.parse(localStorage.getItem(\"token\"));\n  // const name = \"\";\n  // const email = \"\";\n  const name = token ? token.full_name : \"\";\n  const email = token ? token.email : \"\";\n\n  const [form, setForm] = React.useState({\n    Name: name,\n    Email: email,\n    dob: \"\",\n    gender: \"\",\n    country: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setForm({ ...form, [name]: value });\n  };\n\n  console.log(form);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const response = await fetch(\n      \"../../../.netlify/functions/post-student/post-student.js\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(form),\n      },\n    );\n    const final = await response.json();\n    console.log(final);\n  };\n\n  // Retreive data from airtable, then check if user is already registered with all neccessary information\n  React.useEffect(() => {\n    // get user email from state\n    let userEmail = loginInfo.email;\n    console.log(\"in useEffect userEmail is: \", userEmail);\n    // pass on email as a param to the database query\n    // let userDataAirtable = fetchStudentRecords(userEmail);\n    console.log(\"userdata is: \", isUserInfoComplete);\n\n    // fetch(`../../../.netlify/functions/fetch-student/fetch-student.js/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"content-type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({ email: userEmail }),\n    // }).then((data) => console.log(\"we got back from the fetch: \", data));\n    fetch(\n      `../../../.netlify/functions/fetch-student/fetch-student.js?`,\n    ).then((data) => console.log(\"we got back from the fetch: \", data));\n\n    //   fetchStudentRecords(userEmail, setIsUserInfoComplete);\n  }, [loginInfo]);\n\n  React.useEffect(() => {\n    console.log(\"isUserInfoComplete :\", isUserInfoComplete);\n    if (isUserInfoComplete) {\n      return history.push(\"/my-missions\");\n    }\n  }, [isUserInfoComplete]);\n\n  React.useEffect(() => {\n    const token = JSON.parse(localStorage.getItem(\"token\"));\n    // console.log(token.email, token.full_name);\n\n    if (token) {\n      setLoginInfo({\n        email: token.email,\n        name: token.full_name,\n      });\n    }\n  }, [setLoginInfo]);\n\n  console.log(loginInfo);\n\n  return (\n    <>\n      <Heading>Before you begin...</Heading>\n      <FormContainer onSubmit={handleSubmit}>\n        <FormInputWrapper>\n          <DateInput onChange={handleChange} />\n        </FormInputWrapper>\n        <FormInputWrapper>\n          <DropdownCountries onChange={handleChange} />\n        </FormInputWrapper>\n        <FormInputWrapper>\n          <DropdownGender onChange={handleChange} />\n        </FormInputWrapper>\n        <TextButton type={\"submit\"} text={\"Get started!\"} />\n      </FormContainer>\n    </>\n  );\n\n  // query the airtable to see if we have user's details in our database\n\n  // if we do not\n  // render the signup p2 form to collect the data\n  // send and save the data on the airtable\n\n  // if we do have the details\n  // redirect to the mission page\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}