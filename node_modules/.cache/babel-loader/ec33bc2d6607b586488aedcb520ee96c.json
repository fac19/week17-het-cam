{"ast":null,"code":"const Airtable = require(\"airtable\");\n\nconst base = new Airtable({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"keyOIINSZ9ehyF6Cz\"\n}).base(\"appiR8DpsnVuhNHj4\");\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\"); // url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table; // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = record => {\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n};\n\nconst postStudent = async fields => {\n  console.log(fields); // get user info from app context\n\n  try {\n    const createdRecord = await studentTable.create({\n      fields: {\n        Username: \"\",\n        Gender: fields.gender,\n        Email: \"\",\n        \"Current level\": 0,\n        DOB: fields.dob,\n        Country: fields.Country\n      }\n    });\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async fields => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/utils/post-data.js"],"names":["Airtable","require","base","endpointUrl","apiKey","entriesTable","studentTable","PostData","event","context","tableName","queryStringParameters","table","minifyRecord","record","id","fields","postStudent","console","log","createdRecord","create","Username","Gender","gender","Email","DOB","dob","Country","err","error","postEntries"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AACxBG,EAAAA,WAAW,EAAE,0BADW;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAAb,EAGVF,IAHU,CAGL,mBAHK,CAAb;AAKA,MAAMG,YAAY,GAAGH,IAAI,CAAC,SAAD,CAAzB;AACA,MAAMI,YAAY,GAAGJ,IAAI,CAAC,UAAD,CAAzB,C,CAEA;;AAEA,MAAMK,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,QAAMC,SAAS,GAAGF,KAAK,CAACG,qBAAN,CAA4BC,KAA9C,CADmC,CAGnC;AACA;AACA;AACD,CAND;;AAQA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,SAAO;AACLC,IAAAA,EAAE,EAAED,MAAM,CAACC,EADN;AAELC,IAAAA,MAAM,EAAEF,MAAM,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,WAAW,GAAG,MAAOD,MAAP,IAAkB;AACpCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EADoC,CAEpC;;AACA,MAAI;AACF,UAAMI,aAAa,GAAG,MAAMd,YAAY,CAACe,MAAb,CAAoB;AAC9CL,MAAAA,MAAM,EAAE;AACNM,QAAAA,QAAQ,EAAE,EADJ;AAENC,QAAAA,MAAM,EAAEP,MAAM,CAACQ,MAFT;AAGNC,QAAAA,KAAK,EAAE,EAHD;AAIN,yBAAiB,CAJX;AAKNC,QAAAA,GAAG,EAAEV,MAAM,CAACW,GALN;AAMNC,QAAAA,OAAO,EAAEZ,MAAM,CAACY;AANV;AADsC,KAApB,CAA5B;AAUAV,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACO,aAAD,CAAxB;AACD,GAZD,CAYE,OAAOS,GAAP,EAAY;AACZX,IAAAA,OAAO,CAACY,KAAR,CAAcD,GAAd;AACD;AACF,CAlBD;;AAoBA,MAAME,WAAW,GAAG,MAAOf,MAAP,IAAkB;AACpC,MAAI;AACF,UAAMI,aAAa,GAAG,MAAMf,YAAY,CAACgB,MAAb,CAAoBL,MAApB,CAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACO,aAAD,CAAxB;AACD,GAHD,CAGE,OAAOS,GAAP,EAAY;AACZX,IAAAA,OAAO,CAACY,KAAR,CAAcD,GAAd;AACD;AACF,CAPD;;AASA,SAASZ,WAAT,EAAsBc,WAAtB","sourcesContent":["const Airtable = require(\"airtable\");\n\nconst base = new Airtable({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"keyOIINSZ9ehyF6Cz\",\n}).base(\"appiR8DpsnVuhNHj4\");\n\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\");\n\n// url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table;\n\n  // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = (record) => {\n  return {\n    id: record.id,\n    fields: record.fields,\n  };\n};\n\nconst postStudent = async (fields) => {\n  console.log(fields);\n  // get user info from app context\n  try {\n    const createdRecord = await studentTable.create({\n      fields: {\n        Username: \"\",\n        Gender: fields.gender,\n        Email: \"\",\n        \"Current level\": 0,\n        DOB: fields.dob,\n        Country: fields.Country,\n      },\n    });\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async (fields) => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };\n"]},"metadata":{},"sourceType":"module"}