{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { AppContext } from \"../utils/AppContext\";\n\nconst Airtable = require(\"airtable\"); // export REACT_APP_AIRTABLE_API_KEY=keyOIINSZ9ehyF6Cz\n// export REACT_APP_AIRTABLE_BASE_ID=appiR8DpsnVuhNHj4\n// export REACT_APP_AIRTABLE_API_URL=https://api.airtable.com/v0/\n// const {\n//   REACT_APP_AIRTABLE_API_KEY,\n//   REACT_APP_AIRTABLE_BASE_ID,\n//   REACT_APP_AIRTABLE_API_URL,\n// } = process.env;\n\n\nconst base = new Airtable({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"keyOIINSZ9ehyF6Cz\"\n}).base(\"appiR8DpsnVuhNHj4\");\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\"); // url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table; // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = record => {\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n};\n\nconst postStudent = async fields => {\n  // const { loginInfo, setLoginInfo } = useContext(AppContext);\n  const token = JSON.parse(localStorage.getItem(\"token\")); // console.log(\"loginInfo\", loginInfo);\n  // console.log(fields);\n  // get user info from app context\n\n  try {\n    const createdRecord = await studentTable.create({\n      fields: {\n        Name: token.full_name,\n        Gender: fields.gender,\n        Email: token.email,\n        \"Current level\": 0,\n        DOB: fields.dob,\n        Country: fields.Country\n      }\n    });\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async fields => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/utils/post-data.js"],"names":["React","useContext","AppContext","Airtable","require","base","endpointUrl","apiKey","entriesTable","studentTable","PostData","event","context","tableName","queryStringParameters","table","minifyRecord","record","id","fields","postStudent","token","JSON","parse","localStorage","getItem","createdRecord","create","Name","full_name","Gender","gender","Email","email","DOB","dob","Country","console","log","err","error","postEntries"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAG,IAAIF,QAAJ,CAAa;AACxBG,EAAAA,WAAW,EAAE,0BADW;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAAb,EAGVF,IAHU,CAGL,mBAHK,CAAb;AAKA,MAAMG,YAAY,GAAGH,IAAI,CAAC,SAAD,CAAzB;AACA,MAAMI,YAAY,GAAGJ,IAAI,CAAC,UAAD,CAAzB,C,CAEA;;AAEA,MAAMK,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,QAAMC,SAAS,GAAGF,KAAK,CAACG,qBAAN,CAA4BC,KAA9C,CADmC,CAGnC;AACA;AACA;AACD,CAND;;AAQA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,SAAO;AACLC,IAAAA,EAAE,EAAED,MAAM,CAACC,EADN;AAELC,IAAAA,MAAM,EAAEF,MAAM,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,WAAW,GAAG,MAAOD,MAAP,IAAkB;AACpC;AACA,QAAME,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd,CAFoC,CAGpC;AACA;AACA;;AACA,MAAI;AACF,UAAMC,aAAa,GAAG,MAAMjB,YAAY,CAACkB,MAAb,CAAoB;AAC9CR,MAAAA,MAAM,EAAE;AACNS,QAAAA,IAAI,EAAEP,KAAK,CAACQ,SADN;AAENC,QAAAA,MAAM,EAAEX,MAAM,CAACY,MAFT;AAGNC,QAAAA,KAAK,EAAEX,KAAK,CAACY,KAHP;AAIN,yBAAiB,CAJX;AAKNC,QAAAA,GAAG,EAAEf,MAAM,CAACgB,GALN;AAMNC,QAAAA,OAAO,EAAEjB,MAAM,CAACiB;AANV;AADsC,KAApB,CAA5B;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAY,CAACU,aAAD,CAAxB;AACD,GAZD,CAYE,OAAOa,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACD;AACF,CArBD;;AAuBA,MAAME,WAAW,GAAG,MAAOtB,MAAP,IAAkB;AACpC,MAAI;AACF,UAAMO,aAAa,GAAG,MAAMlB,YAAY,CAACmB,MAAb,CAAoBR,MAApB,CAA5B;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAY,CAACU,aAAD,CAAxB;AACD,GAHD,CAGE,OAAOa,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACD;AACF,CAPD;;AASA,SAASnB,WAAT,EAAsBqB,WAAtB","sourcesContent":["import React, { useContext } from \"react\";\nimport { AppContext } from \"../utils/AppContext\";\n\nconst Airtable = require(\"airtable\");\n\n// export REACT_APP_AIRTABLE_API_KEY=keyOIINSZ9ehyF6Cz\n// export REACT_APP_AIRTABLE_BASE_ID=appiR8DpsnVuhNHj4\n// export REACT_APP_AIRTABLE_API_URL=https://api.airtable.com/v0/\n\n// const {\n//   REACT_APP_AIRTABLE_API_KEY,\n//   REACT_APP_AIRTABLE_BASE_ID,\n//   REACT_APP_AIRTABLE_API_URL,\n// } = process.env;\n\nconst base = new Airtable({\n  endpointUrl: \"https://api.airtable.com\",\n  apiKey: \"keyOIINSZ9ehyF6Cz\",\n}).base(\"appiR8DpsnVuhNHj4\");\n\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\");\n\n// url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table;\n\n  // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = (record) => {\n  return {\n    id: record.id,\n    fields: record.fields,\n  };\n};\n\nconst postStudent = async (fields) => {\n  // const { loginInfo, setLoginInfo } = useContext(AppContext);\n  const token = JSON.parse(localStorage.getItem(\"token\"));\n  // console.log(\"loginInfo\", loginInfo);\n  // console.log(fields);\n  // get user info from app context\n  try {\n    const createdRecord = await studentTable.create({\n      fields: {\n        Name: token.full_name,\n        Gender: fields.gender,\n        Email: token.email,\n        \"Current level\": 0,\n        DOB: fields.dob,\n        Country: fields.Country,\n      },\n    });\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async (fields) => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };\n"]},"metadata":{},"sourceType":"module"}