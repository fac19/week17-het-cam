{"ast":null,"code":"var _jsxFileName = \"/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/utils/identity-actions.js\";\nimport React from \"react\";\nimport netlifyIdentity from \"netlify-identity-widget\";\nexport const IdentityContext = React.createContext();\nexport function IdentityProvider({\n  children\n}) {\n  const [state, setState] = React.useState(\"loading\");\n  React.useEffect(() => {\n    netlifyIdentity.init();\n    const user = netlifyIdentity.currentUser();\n    setState(user ? \"loggedIn\" : \"loggedOut\");\n    netlifyIdentity.on(\"login\", () => {\n      netlifyIdentity.close();\n      setState(\"loggedIn\");\n    });\n    netlifyIdentity.on(\"logout\", () => {\n      netlifyIdentity.close();\n      setState(\"loggedOut\");\n    });\n  }, []);\n  const value = React.useMemo(() => ({\n    state,\n    netlifyIdentity\n  }), [state]);\n  return /*#__PURE__*/React.createElement(IdentityContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useIdentity() {\n  const ctx = React.useContext(IdentityContext);\n  if (!ctx) throw new Error(\"useIdentity must be called within an IdentityProvider\");\n  return ctx;\n} // export function loginUser() {\n//   if (netlifyIdentity && netlifyIdentity.currentUser()) {\n//     const {\n//       app_metadata, created_at, confirmed_at, email, id, user_metadata\n//     } = netlifyIdentity.currentUser();\n//     localStorage.setItem(\n//       \"currentOpenSaucedUser\",\n//       JSON.stringify({...app_metadata, created_at, confirmed_at, email, id, ...user_metadata})\n//     );\n//   }\n// }\n// export function logoutUser() {\n//   localStorage.removeItem(\"currentOpenSaucedUser\");\n// }","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/utils/identity-actions.js"],"names":["React","netlifyIdentity","IdentityContext","createContext","IdentityProvider","children","state","setState","useState","useEffect","init","user","currentUser","on","close","value","useMemo","useIdentity","ctx","useContext","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAGF,KAAK,CAACG,aAAN,EAAxB;AAEP,OAAO,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,SAAf,CAA1B;AAEAR,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBR,IAAAA,eAAe,CAACS,IAAhB;AACA,UAAMC,IAAI,GAAGV,eAAe,CAACW,WAAhB,EAAb;AACAL,IAAAA,QAAQ,CAACI,IAAI,GAAG,UAAH,GAAgB,WAArB,CAAR;AAEAV,IAAAA,eAAe,CAACY,EAAhB,CAAmB,OAAnB,EAA4B,MAAM;AAChCZ,MAAAA,eAAe,CAACa,KAAhB;AACAP,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD,KAHD;AAIAN,IAAAA,eAAe,CAACY,EAAhB,CAAmB,QAAnB,EAA6B,MAAM;AACjCZ,MAAAA,eAAe,CAACa,KAAhB;AACAP,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD,KAHD;AAID,GAbD,EAaG,EAbH;AAeA,QAAMQ,KAAK,GAAGf,KAAK,CAACgB,OAAN,CAAc,OAAO;AAAEV,IAAAA,KAAF;AAASL,IAAAA;AAAT,GAAP,CAAd,EAAkD,CAACK,KAAD,CAAlD,CAAd;AACA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAES,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QADH,CADF;AAKD;AAED,OAAO,SAASY,WAAT,GAAuB;AAC5B,QAAMC,GAAG,GAAGlB,KAAK,CAACmB,UAAN,CAAiBjB,eAAjB,CAAZ;AACA,MAAI,CAACgB,GAAL,EACE,MAAM,IAAIE,KAAJ,CAAU,uDAAV,CAAN;AACF,SAAOF,GAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport netlifyIdentity from \"netlify-identity-widget\";\n\nexport const IdentityContext = React.createContext();\n\nexport function IdentityProvider({ children }) {\n  const [state, setState] = React.useState(\"loading\");\n\n  React.useEffect(() => {\n    netlifyIdentity.init();\n    const user = netlifyIdentity.currentUser();\n    setState(user ? \"loggedIn\" : \"loggedOut\");\n\n    netlifyIdentity.on(\"login\", () => {\n      netlifyIdentity.close();\n      setState(\"loggedIn\");\n    });\n    netlifyIdentity.on(\"logout\", () => {\n      netlifyIdentity.close();\n      setState(\"loggedOut\");\n    });\n  }, []);\n\n  const value = React.useMemo(() => ({ state, netlifyIdentity }), [state]);\n  return (\n    <IdentityContext.Provider value={value}>\n      {children}\n    </IdentityContext.Provider>\n  );\n}\n\nexport function useIdentity() {\n  const ctx = React.useContext(IdentityContext);\n  if (!ctx)\n    throw new Error(\"useIdentity must be called within an IdentityProvider\");\n  return ctx;\n}\n\n// export function loginUser() {\n//   if (netlifyIdentity && netlifyIdentity.currentUser()) {\n//     const {\n//       app_metadata, created_at, confirmed_at, email, id, user_metadata\n//     } = netlifyIdentity.currentUser();\n\n//     localStorage.setItem(\n//       \"currentOpenSaucedUser\",\n//       JSON.stringify({...app_metadata, created_at, confirmed_at, email, id, ...user_metadata})\n//     );\n//   }\n// }\n\n// export function logoutUser() {\n//   localStorage.removeItem(\"currentOpenSaucedUser\");\n// }\n"]},"metadata":{},"sourceType":"module"}