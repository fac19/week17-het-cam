{"ast":null,"code":"const Airtable = require(\"airtable\");\n\nconst {\n  AIRTABLE_API_KEY,\n  AIRTABLE_BASE_ID,\n  AIRTABLE_API_URL\n} = process.env;\nconst base = new Airtable({\n  endpointUrl: AIRTABLE_API_URL,\n  apiKey: AIRTABLE_API_KEY\n}).base(AIRTABLE_BASE_ID);\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\"); // url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table; // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = record => {\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n};\n\nconst postStudent = async fields => {\n  try {\n    const createdRecord = await studentTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async fields => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };","map":{"version":3,"sources":["/home/hettiemcc/documents/fac/projects/teach-fish-frontend/src/utils/post-data.js"],"names":["Airtable","require","AIRTABLE_API_KEY","AIRTABLE_BASE_ID","AIRTABLE_API_URL","process","env","base","endpointUrl","apiKey","entriesTable","studentTable","PostData","event","context","tableName","queryStringParameters","table","minifyRecord","record","id","fields","postStudent","createdRecord","create","console","log","err","error","postEntries"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,gBAApB;AAAsCC,EAAAA;AAAtC,IAA2DC,OAAO,CAACC,GAAzE;AAEA,MAAMC,IAAI,GAAG,IAAIP,QAAJ,CAAa;AACxBQ,EAAAA,WAAW,EAAEJ,gBADW;AAExBK,EAAAA,MAAM,EAAEP;AAFgB,CAAb,EAGVK,IAHU,CAGLJ,gBAHK,CAAb;AAKA,MAAMO,YAAY,GAAGH,IAAI,CAAC,SAAD,CAAzB;AACA,MAAMI,YAAY,GAAGJ,IAAI,CAAC,UAAD,CAAzB,C,CAEA;;AAEA,MAAMK,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC,QAAMC,SAAS,GAAGF,KAAK,CAACG,qBAAN,CAA4BC,KAA9C,CADmC,CAGnC;AACA;AACA;AACD,CAND;;AAQA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,SAAO;AACLC,IAAAA,EAAE,EAAED,MAAM,CAACC,EADN;AAELC,IAAAA,MAAM,EAAEF,MAAM,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,WAAW,GAAG,MAAOD,MAAP,IAAkB;AACpC,MAAI;AACF,UAAME,aAAa,GAAG,MAAMZ,YAAY,CAACa,MAAb,CAAoBH,MAApB,CAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACK,aAAD,CAAxB;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACD;AACF,CAPD;;AASA,MAAME,WAAW,GAAG,MAAOR,MAAP,IAAkB;AACpC,MAAI;AACF,UAAME,aAAa,GAAG,MAAMb,YAAY,CAACc,MAAb,CAAoBH,MAApB,CAA5B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACK,aAAD,CAAxB;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACD;AACF,CAPD;;AASA,SAASL,WAAT,EAAsBO,WAAtB","sourcesContent":["const Airtable = require(\"airtable\");\n\nconst { AIRTABLE_API_KEY, AIRTABLE_BASE_ID, AIRTABLE_API_URL } = process.env;\n\nconst base = new Airtable({\n  endpointUrl: AIRTABLE_API_URL,\n  apiKey: AIRTABLE_API_KEY,\n}).base(AIRTABLE_BASE_ID);\n\nconst entriesTable = base(\"Entries\");\nconst studentTable = base(\"Students\");\n\n// url = AIRTABLE_API_URL + / + AIRTABLE_BASE_ID + / + tableName;\n\nconst PostData = (event, context) => {\n  const tableName = event.queryStringParameters.table;\n\n  // if (event.httpMethod !== \"POST\") {\n  //     return { statusCode: 405, body: \"Method not allowed - please POST\" };\n  // }\n};\n\nconst minifyRecord = (record) => {\n  return {\n    id: record.id,\n    fields: record.fields,\n  };\n};\n\nconst postStudent = async (fields) => {\n  try {\n    const createdRecord = await studentTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst postEntries = async (fields) => {\n  try {\n    const createdRecord = await entriesTable.create(fields);\n    console.log(minifyRecord(createdRecord));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport { postStudent, postEntries };\n"]},"metadata":{},"sourceType":"module"}